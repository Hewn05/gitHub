/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2022-11-06 12:03:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.saii.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1667718152000L));
    _jspx_dependants.put("jar:file:/D:/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/SAII/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"http://localhost:8081/chilsungsaii/CSS/LoginForm.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인 페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write("#form {width: 400px; margin:auto; padding:30px}\r\n");
      out.write("h2 { text-align: center; margin: 50px 0 10px 0;}\r\n");
      out.write("input[type=text], input[type=password] { vertical-align: 5px; width:400px; height:40px; display: inline-block;\r\n");
      out.write("									border:none; background: #F7F7F7;}\r\n");
      out.write("label { vertical-align: 5px; color: #999;}\r\n");
      out.write("a {vertical-align: 5px; text-decoration:none;}\r\n");
      out.write("input.sign {margin-top: 24px; height: 45px; width: 100%; background: none; border: none;\r\n");
      out.write("    		color: #fff; font-size: 16px; font-weight: 500; cursor: pointer;\r\n");
      out.write("    		border-radius: 4px; background-color: #98dde3;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--마우스 커서-->	\r\n");
      out.write("<style type=\"text/css\">* {cursor: url(https://ani.cursors-4u.net/symbols/sym-9/sym833.ani), url(https://ani.cursors-4u.net/symbols/sym-9/sym833.png), auto !important;}</style>\r\n");
      out.write("<a href=\"https://www.cursors-4u.com/cursor/2018/02/17/fast-beating-heart.html\" target=\"_blank\" title=\"Fast Beating Heart\"><img src=\"https://cur.cursors-4u.net/cursor.png\" border=\"0\" alt=\"Fast Beating Heart\" style=\"position:absolute; top: 0px; right: 0px;\" /></a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');
          out.write('	');
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		\r\n");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /saii/login/loginPage.jsp(25,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.UserId }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<script>\r\n");
          out.write("		function validateForm(form) {\r\n");
          out.write("			if(!form.user_id.value==\" \"{\r\n");
          out.write("				alert(\"아이디나 패스워드를 확인해주세요.\");\r\n");
          out.write("				return false;\r\n");
          out.write("			}\r\n");
          out.write("			if(!form.user_pw.value==\" \"){\r\n");
          out.write("				alert(\"아이디나 패스워드를 확인해주세요.\");\r\n");
          out.write("				return false;\r\n");
          out.write("			}\r\n");
          out.write("	/* 		if(!form.user_id.value==\"\"){\r\n");
          out.write("				alert(\"아이디를 입력하세요.\");\r\n");
          out.write("				return false;\r\n");
          out.write("			}\r\n");
          out.write("			if(!form.user_pw.value==\"\"){\r\n");
          out.write("				alert(\"패스워드를 입력하세요.\");\r\n");
          out.write("				return false;\r\n");
          out.write("			} */\r\n");
          out.write("		}\r\n");
          out.write("	</script>\r\n");
          out.write("	<script>\r\n");
          out.write("\r\n");
          out.write("	$(document).ready(function(){\r\n");
          out.write("	 \r\n");
          out.write("	    // 저장된 쿠키값을 가져와서 ID 칸에 넣어준다. 없으면 공백으로 들어감.\r\n");
          out.write("	    var key = getCookie(\"key\");\r\n");
          out.write("	    $(\"#userId\").val(key); \r\n");
          out.write("	     \r\n");
          out.write("	    if($(\"#userId\").val() != \"\"){ // 그 전에 ID를 저장해서 처음 페이지 로딩 시, 입력 칸에 저장된 ID가 표시된 상태라면,\r\n");
          out.write("	        $(\"#idSaveCheck\").attr(\"checked\", true); // ID 저장하기를 체크 상태로 두기.\r\n");
          out.write("	    }\r\n");
          out.write("	     \r\n");
          out.write("	    $(\"#idSaveCheck\").change(function(){ // 체크박스에 변화가 있다면,\r\n");
          out.write("	        if($(\"#idSaveCheck\").is(\":checked\")){ // ID 저장하기 체크했을 때,\r\n");
          out.write("	            setCookie(\"key\", $(\"#userId\").val(), 7); // 7일 동안 쿠키 보관\r\n");
          out.write("	        }else{ // ID 저장하기 체크 해제 시,\r\n");
          out.write("	            deleteCookie(\"key\");\r\n");
          out.write("	        }\r\n");
          out.write("	    });\r\n");
          out.write("	     \r\n");
          out.write("	    // ID 저장하기를 체크한 상태에서 ID를 입력하는 경우, 이럴 때도 쿠키 저장.\r\n");
          out.write("	    $(\"#userId\").keyup(function(){ // ID 입력 칸에 ID를 입력할 때,\r\n");
          out.write("	        if($(\"#idSaveCheck\").is(\":checked\")){ // ID 저장하기를 체크한 상태라면,\r\n");
          out.write("	            setCookie(\"key\", $(\"#userId\").val(), 7); // 7일 동안 쿠키 보관\r\n");
          out.write("	        }\r\n");
          out.write("	    });\r\n");
          out.write("	});\r\n");
          out.write("	 \r\n");
          out.write("	function setCookie(cookieName, value, exdays){\r\n");
          out.write("	    var exdate = new Date();\r\n");
          out.write("	    exdate.setDate(exdate.getDate() + exdays);\r\n");
          out.write("	    var cookieValue = escape(value) + ((exdays==null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
          out.write("	    document.cookie = cookieName + \"=\" + cookieValue;\r\n");
          out.write("	}\r\n");
          out.write("	 \r\n");
          out.write("	function deleteCookie(cookieName){\r\n");
          out.write("	    var expireDate = new Date();\r\n");
          out.write("	    expireDate.setDate(expireDate.getDate() - 1);\r\n");
          out.write("	    document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString();\r\n");
          out.write("	}\r\n");
          out.write("	 \r\n");
          out.write("	function getCookie(cookieName) {\r\n");
          out.write("	    cookieName = cookieName + '=';\r\n");
          out.write("	    var cookieData = document.cookie;\r\n");
          out.write("	    var start = cookieData.indexOf(cookieName);\r\n");
          out.write("	    var cookieValue = '';\r\n");
          out.write("	    if(start != -1){\r\n");
          out.write("	        start += cookieName.length;\r\n");
          out.write("	        var end = cookieData.indexOf(';', start);\r\n");
          out.write("	        if(end == -1)end = cookieData.length;\r\n");
          out.write("	        cookieValue = cookieData.substring(start, end);\r\n");
          out.write("	    }\r\n");
          out.write("	    return unescape(cookieValue);\r\n");
          out.write("	}\r\n");
          out.write("		\r\n");
          out.write("</script>\r\n");
          out.write("	<h2>로그인</h2>\r\n");
          out.write("	<form id=\"form\" action=\"http://localhost:8081/SAII/login\" method=\"post\" name=\"LoginFrm\" onsubmit=\"return validateForm(this);\">\r\n");
          out.write("		<div> \r\n");
          out.write("		<label>아이디 </label>\r\n");
          out.write("		<input type=\"text\" name=\"user_id\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" onclick=\"getCookie()\"/><br/>\r\n");
          out.write("		</div>\r\n");
          out.write("		<div>\r\n");
          out.write("		<label>비밀번호 </label> \r\n");
          out.write("		<input type=\"password\" name=\"user_pw\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user_pw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" /><br/>\r\n");
          out.write("		</div>\r\n");
          out.write("		<input type=\"checkbox\" id=\"idSaveCheck\">아이디 기억하기  <br/>\r\n");
          out.write("		<a href=\"http://localhost:8081/SAII/saii/login/findId2.jsp\" >[아이디 찾기]</a>\r\n");
          out.write("	  	<a href=\"http://localhost:8081/SAII/saii/login/findPw.jsp\" >[비밀번호 찾기]</a>\r\n");
          out.write("	  	<a href=\"http://localhost:8081/SAII/signup\">[회원가입]</a><br/>\r\n");
          out.write("		<input type=\"submit\" class=\"sign\" value=\"로그인\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" onClick=\"history.back()\">\r\n");
          out.write("	  	\r\n");
          out.write("	 	\r\n");
          out.write("	  	\r\n");
          out.write("	  	\r\n");
          out.write("	</form>\r\n");
          out.write("	\r\n");
          out.write("	\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.UserName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("회원님, 로그인 하셨습니다\r\n");
          out.write("		<a href=\"javascript:window.history.back();\">[돌아가기]</a>\r\n");
          out.write("		<a href=\"http://localhost:8081/SAII/logout\">[로그아웃]</a>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
