package com.study.springboot.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.support.TransactionCallbackWithoutResult;
import org.springframework.transaction.support.TransactionTemplate;

@Service
public class BuyAndLogService {

	@Autowired
	TransactionTemplate transactionTemplate;
	
	try {
		transactionTemplate.execute(new TransactionCallbackWithoutResult() {
			@Override
			protected void doInTransactionWithoutResult(TransactionStatus status) {
				trans1.pay(consumerId,  amount);
				if(error.equals("1")) {int n=10/0;}   //억지로 에러발생
				trans2.pay(consumerId,  amount);
			}
		});
		
//		transactionManager.commit(status);			
		return 1;
	}catch(Exception e) {
//		e.printStackTrace();
//		transactionManager.rollback(status);
		System.out.println("transactionTemplate rollback");
		return 0;
	}
	
}
